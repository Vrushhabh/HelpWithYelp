CREATE DEFINER=`dazbtakiff@gmail.com`@`%` PROCEDURE `weather`()
BEGIN

DECLARE varOutdoorSeating BOOLEAN;
DECLARE varPostal INT;
DECLARE varPostal2 INT;
DECLARE varAvgTemp INT;
DECLARE varAvgRainInch FLOAT;
DECLARE varTopMonth VARCHAR(9);
DECLARE exit_loop BOOLEAN DEFAULT FALSE;
DECLARE exit_loop2 BOOLEAN DEFAULT FALSE;

DECLARE outdoorCur CURSOR FOR (
                    SELECT postal, AVG(avgTemp) AS avg_temp, AVG(total_rain_inches) as avg_rain
                    FROM businesses NATURAL JOIN weather_by_zip
                    GROUP BY postal
					ORDER BY postal
                    );

DECLARE monthCur CURSOR FOR (
					SELECT month, postal
					FROM (SELECT MAX(avgTemp) AS max_temp, postal FROM weather_by_zip GROUP BY postal) AS max_temp_info NATURAL JOIN weather_by_zip
					WHERE avgTemp = max_temp
					ORDER BY postal
);

DECLARE CONTINUE HANDLER FOR NOT FOUND SET exit_loop = TRUE;

DROP TABLE IF EXISTS LocalWeather;
CREATE TABLE LocalWeather(
    postal INT PRIMARY KEY,
    outdoorSeating BOOLEAN,
    highestTempMonth varchar(9)
);
OPEN outdoorCur;

outdoorCloop: LOOP
    FETCH outdoorCur INTO varPostal, varAvgTemp, varAvgRainInch;

    IF(exit_loop) THEN
        LEAVE outdoorCloop;
    END IF;
    
    IF(varAvgTemp > 70 AND varAvgRainInch < 4.5) THEN
        SET varOutdoorSeating = TRUE;
    ELSE 
        SET varOutdoorSeating = FALSE;
    END IF;
    
    INSERT IGNORE INTO LocalWeather (postal, outdoorSeating) VALUES(varPostal, varOutdoorSeating);

END LOOP outdoorCloop;
CLOSE outdoorCur;

SET exit_loop = FALSE;

OPEN monthCur;
monthCloop: LOOP
	FETCH monthCur INTO varTopMonth, varPostal2;
    
    IF(exit_loop) THEN
        LEAVE monthCloop;
    END IF;

	UPDATE LocalWeather
	SET highestTempMonth = varTopMonth
	WHERE postal = varPostal2;

END LOOP monthCLoop;
CLOSE monthCur;

END;
